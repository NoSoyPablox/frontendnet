@model List<CarritoProducto>

<div class="row small mb-3">
    <div class="col text-end">
        <span class="text-muted">Mostrando @Model.Count() producto(s)</span>
    </div>
</div>

<div class="d-flex p-3 mb-3">
    @if (Model.Count() > 0)
    {
        <div class="w-75 mr-4">
            @foreach (var item in Model)
            {
                if (item.Producto != null)
                {
                    <div class="card shadow-sm mb-3">
                        <div class="d-flex flex-row align-items-center p-3">
                            <div class="me-3">
                                <img src='@((item.Producto.ArchivoId == null) ? "https://placehold.co/300x200/FFF/999?text=Artículo" : $"{ViewBag.Url}/api/archivos/{item.Producto.ArchivoId}")'
                                     class="img-fluid rounded" style="max-width: 150px;">
                            </div>
                            <div class="product-info flex-grow-1">
                                <p class="product-title fw-bold mb-1">@Html.DisplayFor(modelItem => item.Producto.Titulo)</p>
                                <p class="product-price text-muted mb-3">@Html.DisplayFor(modelItem => item.Producto.Precio)</p>

                                <p class="product-price text-muted mb-1">Cantidad actual</p>
                                <div class="product-quantity d-flex align-items-center mb-2">
                                    <button type="button" onclick="disminuir(@item.Producto.ProductoId)"
                                        class="btn btn-outline-primary btn-sm me-2">-</button>
                                    <input id="cantidad-@item.Producto.ProductoId" type="text"
                                        class="form-control form-control-sm text-center" value="@item.Cantidad" readonly
                                        style="width: 50px;">
                                    <button type="button" onclick="aumentar(@item.Producto.ProductoId)"
                                        class="btn btn-outline-primary btn-sm ms-2">+</button>
                                </div>

                                @if (TempData["IdError"] != null && (int?)TempData["IdError"] == item.Producto.ProductoId &&
                                    TempData["ErrorCantidad"] != null)
                                {
                                    <div>
                                        <p class="text-danger fw-semibold">@TempData["ErrorCantidad"]</p>
                                    </div>
                                }

                                <div class="product-actions mt-3">
                                    <a class="btn btn-outline-danger btn-sm" asp-action="Eliminar"
                                       asp-route-itemid="@item.Producto.ProductoId">Eliminar</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>

        <div class="card w-25 border-light rounded p-3">
            <div class="d-flex align-items-center flex-column">
                <h6 class="fw-bold mb-4">Resumen de compra</h6>
                <div class="d-flex w-100 mb-2">
                    <h6 class="mb-1">Producto</h6>
                    <h6 class="mb-1 ms-auto">Precio</h6>
                </div>
                @foreach (var item in Model)
                {
                    if (item.Producto != null)
                    {
                        <div class="d-flex w-100">
                            <p class="mb-1">@Html.DisplayFor(modelItem => item.Producto.Titulo)</p>
                            <p class="mb-1 ms-auto">$@Html.DisplayFor(modelItem => item.TotalPrecio)</p>
                        </div>
                    }
                }
                <hr class="w-100 my-3" />
                @if (Model[0] != null)
                {
                    <div class="d-flex justify-content-between w-100 mb-4">
                        <p class="fw-bold">Total</p>
                        <p class="fw-bold">$@Html.DisplayFor(modelItem => Model[0].TotalPrecio)</p>
                    </div>
                    <form class="w-100 text-center">
                        <button type="submit" class="btn btn-primary w-75 rounded-pill">Comprar ahora</button>
                    </form>
                }
            </div>
        </div>
    }
    else
    {
        <div class="d-flex flex-column align-items-center justify-content-center mt-5 w-100">
            <div class="text-center">
                <i class="bi bi-cart-fill text-muted" style="font-size: 4rem;"></i>
                <h4 class="mt-3 text-muted">Tu carrito está vacío</h4>
                <p class="text-muted">¡Agrega algunos productos para comenzar a comprar!</p>
                <a href="@Url.Action("Index", "Comprar")" class="btn btn-outline-primary mt-3">Ir a la tienda</a>
            </div>
        </div>
    }
</div>

<script>
    function aumentar(idproducto) {
        const id = "cantidad-" + idproducto;
        let item = document.getElementById(id);
        if (item) {
            let num = parseInt(item.value);
            if (!isNaN(num)) {
                item.value = num + 1;
            } else {
                item.value = 1;
            }
        }
    }

    function disminuir(idproducto) {
        const id = "cantidad-" + idproducto;
        let item = document.getElementById(id);
        if (item) {
            let num = parseInt(item.value);
            if (!isNaN(num) && num > 1) {
                item.value = num - 1;
            } else {
                item.value = 1;
            }
        }
    }
</script>
